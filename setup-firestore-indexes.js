const { initializeApp } = require('firebase/app');
const { getFirestore, collection, query, where, orderBy, limit } = require('firebase/firestore');

// Configura√ß√£o do Firebase (substitua pelos seus valores)
const firebaseConfig = {
  // Suas configura√ß√µes do Firebase aqui
  apiKey: "sua-api-key",
  authDomain: "seu-projeto.firebaseapp.com",
  projectId: "seu-projeto-id",
  storageBucket: "seu-projeto.appspot.com",
  messagingSenderId: "seu-messaging-sender-id",
  appId: "seu-app-id"
};

// Inicializar Firebase
const app = initializeApp(firebaseConfig);
const db = getFirestore(app);

// Fun√ß√£o para criar √≠ndices automaticamente
async function createIndexes() {
  console.log('üîÑ Criando √≠ndices do Firestore...');
  
  try {
    // √çndice para pacientes: psychologistId + createdAt
    console.log('üìä Criando √≠ndice para pacientes...');
    const patientsQuery = query(
      collection(db, 'patients'),
      where('psychologistId', '==', 'temp'),
      orderBy('createdAt', 'desc')
    );
    
    // √çndice para pacientes: psychologistId + status
    const patientsStatusQuery = query(
      collection(db, 'patients'),
      where('psychologistId', '==', 'temp'),
      where('status', '==', 'active')
    );
    
    // √çndice para sess√µes: psychologistId + date
    console.log('üìÖ Criando √≠ndice para sess√µes...');
    const sessionsQuery = query(
      collection(db, 'sessions'),
      where('psychologistId', '==', 'temp'),
      orderBy('date', 'asc')
    );
    
    // √çndice para sess√µes: psychologistId + status
    const sessionsStatusQuery = query(
      collection(db, 'sessions'),
      where('psychologistId', '==', 'temp'),
      where('status', '==', 'pending')
    );
    
    // √çndice para progresso: patientId + date
    console.log('üìà Criando √≠ndice para progresso...');
    const progressQuery = query(
      collection(db, 'progress'),
      where('patientId', '==', 'temp'),
      orderBy('date', 'desc')
    );
    
    // √çndice para avalia√ß√µes: psychologistId
    console.log('‚≠ê Criando √≠ndice para avalia√ß√µes...');
    const evaluationsQuery = query(
      collection(db, 'evaluations'),
      where('psychologistId', '==', 'temp')
    );
    
    console.log('‚úÖ √çndices criados com sucesso!');
    console.log('üìù Nota: O Firebase criar√° automaticamente os √≠ndices necess√°rios quando as queries forem executadas pela primeira vez.');
    
  } catch (error) {
    if (error.code === 'failed-precondition') {
      console.log('‚ö†Ô∏è  Alguns √≠ndices precisam ser criados manualmente no console do Firebase.');
      console.log('üîó Acesse: https://console.firebase.google.com');
      console.log('üìö Documenta√ß√£o: https://firebase.google.com/docs/firestore/query-data/indexing');
    } else {
      console.error('‚ùå Erro ao criar √≠ndices:', error);
    }
  }
}

// Executar se chamado diretamente
if (require.main === module) {
  createIndexes();
}

module.exports = { createIndexes };
